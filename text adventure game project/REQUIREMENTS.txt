
Your project is to implement this game. Here are a few requirements that need to be implemented.

    The game should start by stating the story in two or three lines. This story should be present in a file called Start.txt.
    The user should input all moves as text commands. Valid commands are MOVE, PICK, DROP, EXIT, ATTACK, LOOK
    The MOVE command should take the direction in which the user wants to move as the second parameter. The directions can be NORTH, SOUTH, EAST or WEST. For example, on entering the MOVE EAST command in room 1, the user should move to the room 2.
    If there is a wall on the side, a message should be displayed telling the user that the move is not possible. For example, MOVE EAST is an invalid command.
    Whenever the user moves to the new room, a one line description of the room should be displayed. The description of all the rooms should be present in a file called Rooms.txt which should be read at the beginning of the program and stored in memory.
    After the room description, all the possible exits from the room should be displayed.
    If there are any items in the room, they should be displayed after the exit path list. There cannot be more than 5 items in a room.
    If there is a monster in the room, its name should be displayed after the item list. A room can contain at the most one monster. e.g. if a user enters a room with a door to east and west, the dagger and Medusa (alive), the description will be.

This room has weird shapes drawn all over the walls and flickering torches make the faces even scarier. There is a door to your east. There is a door to you west. The dagger is lying on the floor. Medusa is waiting to kill you beside a locked door.

    The PICK command should accept the object to be picked as the second parameter. e.g. In the above example, if the user type the command PICK DAGGER, it should remove the dagger from the room, add the dagger to the user’s bag and display a message on the screen. Something that is not in the room should not be allowed to be picked.
    The DROP command should also accept the object to be dropped from the user’s bag into the current room.
    The EXIT command should exit the program.
    The ATTACK command should attack the monster in the room (if there is one). If the weapon that the monster can be killed with is in the bag, the monster should die. Other wise it should kill the user. In case of a death by the hands of monster, the game should end after displaying all the text in a file called EndDead.txt on the screen.
    A monster’s death should create a link between two rooms and its body should remain on the floor. Medusa is guarding the link between room 5 and room 8. Dracula is guarding the link between room 6 and room 9.
    The LOOK command should print out the description of the room including all the items and doors in the room.
    If the user exits the castle after rescuing the princess, the text in a file called EndWin.txt should be displayed and the game should end.
    If the user exits the castle without rescuing the princess, the text in a file called EndLose.txt should be displayed and the game should end.
